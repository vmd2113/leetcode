package com.duongw.leetcode;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;

public class _389_FindTheDifference {
    /**
     * You are given two strings s and t.
     *
     * String t is generated by random shuffling string s and then add one more letter at a random position.
     *
     * Return the letter that was added to t.
     *
     *
     *
     * Example 1:
     *
     * Input: s = "abcd", t = "abcde"
     * Output: "e"
     * Explanation: 'e' is the letter that was added.
     * Example 2:
     *
     * Input: s = "", t = "y"
     * Output: "y"
     *
     *
     * Constraints:
     *
     * 0 <= s.length <= 1000
     * t.length == s.length + 1
     * s and t consist of lowercase English letters.*/

    public char findTheDifference(String s, String t){
        int sumCharS = 0;
        int sumCharT = 0;

        for (char c: s.toCharArray()){
            sumCharS += c;
        }

        for (char c: t.toCharArray()){
            sumCharT += c;
        }

        return (char) (sumCharT - sumCharS);


    }

    public char findTheDifferenceV2(String s, String t){
        HashMap<Character, Integer> map = new HashMap<>();


        // count frequency of each character in t
        for (char c: t.toCharArray()){
            map.put(c, map.getOrDefault(c, 0) + 1);
        }

        // count frequency of each character in s

        for (char c: s.toCharArray()){
            map.put(c, map.getOrDefault(c, 0) - 1);
        }

        for (char c: map.keySet()){
            if (map.get(c) > 0){ return c;}
        }

        return '\0';
    }
    public static void main(String[] args) {

    }

}
